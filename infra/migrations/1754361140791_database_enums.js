exports.up = (pgm) => {
  const sql = `
  CREATE TYPE "visibility_type" AS ENUM (
	'private',
	'followers',
	'members',
	'public'
);

CREATE TYPE "calendar_event_role" AS ENUM (
	'organizer',
	'attendee'
);

CREATE TYPE "org_role" AS ENUM (
	'Programer',
	'Artist'
);

CREATE TYPE "media_type" AS ENUM (
	'image',
	'video',
	'link'
);

CREATE TYPE "frequency" AS ENUM (
	'daily',
	'weekly',
	'monthly',
	'yearly'
);

CREATE TYPE "game_genre" AS ENUM (
	'Shooter',
	'Platformer',
	'Hack and slash',
	'Fighting',
	'Stealth',
	'Survival',
	'Survival horror',
	'Battle royale',
	'Point-and-click',
	'Visual novel',
	'Interactive fiction',
	'Action RPG',
	'Japanese RPG (JRPG)',
	'Roguelike RPG',
	'MMORPG',
	'Life simulation',
	'Construction and management simulation',
	'Vehicle simulation',
	'Real-time strategy (RTS)',
	'Multiplayer online battle arena (MOBA)',
	'Turn-based strategy (TBS)',
	'Tower defense',
	'4X',
	'Racing',
	'Sports simulators',
	'Puzzle',
	'Sandbox',
	'beat em up'
);

CREATE TYPE "game_store_enum" AS ENUM (
	'Microsoft Store',
	'Nintendo eShop',
	'PlayStation Store',
	'Amazon Appstore',
	'Apple App Store',
	'Google Play Store',
	'Huawei AppGallery',
	'Itch.io',
	'Samsung Galaxy Store',
	'TapTap',
	'Tencent AppStore',
	'Big Fish Games',
	'Direct2Drive',
	'DotEmu',
	'GameHouse',
	'Game Jolt',
	'GamersGate',
	'Green Man Gaming',
	'Metaboli',
	'Newgrounds',
	'Steam',
	'GOG.com',
	'Humble Store',
	'Zoom Platform',
	'Amazon Games',
	'Battle.net',
	'Beamdog',
	'Epic Games Store',
	'Gog Galaxy',
	'EA app',
	'Riot Client',
	'Rockstar Games Launcher',
	'Ubisoft Connect',
	'WeGame',
	'outros'
);

CREATE TYPE "game_engine" AS ENUM (
	'Unreal',
	'Unity',
	'Godot',
	'GameMaker',
	'Cave',
	'construct',
	'MonoGame',
	'AppGameKit',
	'RPG Maker',
	'Stencyl',
	'Roblox',
	'GDevelop',
	'Armory3D',
	'CopperCube',
	'CryEngine',
	'Evergine',
	'FalcoEngine',
	'FlaxEngine',
	'G3D',
	'GameGuru',
	'JMonkeyEngine',
	'O3DE',
	'PlayCanvas',
	'Stride',
	'UltraEngine',
	'UPBGE',
	'Wicked',
	'Cocos'
);

CREATE TYPE "game_platform" AS ENUM (
	'Playstation',
	'Xbox',
	'Nintendo Switch',
	'Mega Drive',
	'Lupi',
	'Web',
	'Linux',
	'Windows',
	'iOS',
	'Android',
	'Board Game',
	'Card Game',
	'VR',
	'Cloud',
	'Arcade'
);

CREATE TYPE "game_development_stage" AS ENUM (
	'planning',
	'pre-production',
	'production',
	'pre-release',
	'released',
	'post-production'
);

CREATE TYPE "experience_type" AS ENUM (
	'Junior',
	'Pleno',
	'Senior'
);

CREATE TYPE "notification_type" AS ENUM (
	'new_follower',
	'post_liked',
	'post_commented',
	'event_invite',
	'portfolio_liked',
	'moderation_action',
	'reminder'
);

CREATE TYPE "moderation_action" AS ENUM (
	'ban',
	'block'
);

CREATE TYPE "developer_role" AS ENUM (
	'Game Designer',
	'Level Designer',
	'System Designer',
	'Narrative Designer',
	'Technical Designer',
	'2D Artist',
	'3D Artist',
	'Animator',
	'Technical Artist',
	'Game Programmer',
	'Engine Programmer',
	'Graphics Programmer',
	'Gameplay Programmer',
	'Sound Designer',
	'Composer',
	'Game Producer',
	'Associate Producer',
	'Technical Director',
	'Tester QA',
	'Writer',
	'UI UX Designer',
	' Community Manager'
);

CREATE TABLE "user_followers" (
	"follower_id" UUID NOT NULL,
	"lead_user_id" UUID NOT NULL,
	PRIMARY KEY("follower_id", "lead_user_id")
);

CREATE TABLE "organizations" (
	"id" UUID NOT NULL,
	"owner_id" UUID NOT NULL,
	"name" VARCHAR(255) NOT NULL,
	"description" TEXT,
	"created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"history" TEXT,
	"img" VARCHAR(255),
	PRIMARY KEY("id")
);

CREATE TABLE "org_followers" (
	"org_id" UUID NOT NULL,
	"follower_id" UUID NOT NULL,
	PRIMARY KEY("org_id", "follower_id")
);

CREATE TABLE "org_members" (
	"org_id" UUID NOT NULL,
	"member_id" UUID NOT NULL,
	"Roles" ORG_ROLE ARRAY NOT NULL,
	PRIMARY KEY("org_id", "member_id")
);

CREATE TABLE "games" (
	"id" UUID NOT NULL,
	"name" VARCHAR(255) NOT NULL,
	"short_description" VARCHAR(255),
	"description" TEXT,
	"release_date" DATE,
	"owner_org_id" UUID,
	"owner_id" UUID,
	"genre" GAME_GENRE NOT NULL,
	"engine" GAME_ENGINE,
	"stage" GAME_DEVELOPMENT_STAGE NOT NULL,
	"idiomas" VARCHAR(255) ARRAY,
	PRIMARY KEY("id")
);

CREATE TABLE "games_teams" (
	"id" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"game_id" UUID NOT NULL,
	"team_member_Id" UUID NOT NULL,
	"roles" DEVELOPER_ROLE,
	PRIMARY KEY("id")
);

CREATE TABLE "review" (
	"id" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"game_id" UUID,
	"reviewer_id" UUID,
	"note" INTEGER,
	"description" TEXT,
	"created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY("id")
);

CREATE TABLE "contact_type" (
	"id" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"name" VARCHAR(255),
	"img_ico" VARCHAR(255),
	PRIMARY KEY("id")
);

CREATE TABLE "users_contacts" (
	"id" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"contact_type_id" INTEGER,
	"user_id" UUID,
	"contact_value" VARCHAR(255),
	PRIMARY KEY("id")
);

CREATE TABLE "organization_contacts" (
	"id" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"contact_type_id" INTEGER,
	"org_id" UUID,
	"contact_value" VARCHAR(255),
	PRIMARY KEY("id")
);

CREATE TABLE "store_page" (
	"id" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"game_id" UUID,
	"page_url" VARCHAR(255),
	"store_type_id" INTEGER,
	"price" DECIMAL(10,2),
	PRIMARY KEY("id")
);

CREATE TABLE "game_store" (
	"id" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"name" GAME_STORE_ENUM,
	"ico" VARCHAR(255),
	PRIMARY KEY("id")
);

CREATE TABLE "calendars" (
	"id" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"name" VARCHAR(255),
	"owner_user_id" UUID,
	"owner_org_id" UUID,
	"visibility" VISIBILITY_TYPE,
	PRIMARY KEY("id")
);

CREATE TABLE "calendar_events" (
	"id" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"calendar_id" INTEGER NOT NULL,
	"title" VARCHAR(255),
	"description" TEXT,
	"start_time" TIMESTAMPTZ,
	"end_time" TIMESTAMPTZ,
	"location" VARCHAR(255),
	"created_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"img" VARCHAR(255),
	"is_recurring" BOOLEAN NOT NULL DEFAULT false,
	"recurrence_rule_id" INTEGER,
	PRIMARY KEY("id")
);

CREATE TABLE "recurrence_rules" (
	"id" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"frequency" FREQUENCY,
	"interval" INTEGER NOT NULL DEFAULT 1 CHECK(interval >= 1),
	"count" INTEGER NOT NULL CHECK(count>0),
	"until" TIMESTAMP,
	"by_day" VARCHAR(20),
	"by_month_day" VARCHAR(50),
	"by_month" VARCHAR(50),
	"created_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY("id")
);

--COMMENT ON TABLE "recurrence_rules" IS 'Armazena regras de recorrência para eventos do calendário';

CREATE TABLE "calendar_event_participants" (
	"event_id" INTEGER NOT NULL,
	"user_id" UUID NOT NULL,
	"role" CALENDAR_EVENT_ROLE NOT NULL,
	"confirm" BOOLEAN NOT NULL DEFAULT false,
	PRIMARY KEY("event_id", "user_id")
);

CREATE TABLE "posts" (
	"id" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"author_id" UUID NOT NULL,
	"organization_id" UUID,
	"event_id" INTEGER,
	"content" TEXT,
	"img" VARCHAR(255),
	"created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"visibility" VISIBILITY_TYPE NOT NULL DEFAULT 'public',
	"parent_post_id" INTEGER,
	PRIMARY KEY("id")
);

CREATE TABLE "post_likes" (
	"post_id" INTEGER NOT NULL,
	"user_id" UUID NOT NULL,
	PRIMARY KEY("post_id", "user_id")
);

CREATE TABLE "comments" (
	"id" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"post_id" INTEGER NOT NULL,
	"author_id" UUID NOT NULL,
	"content" TEXT,
	"created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY("id")
);

CREATE TABLE "portfolios" (
	"id" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"user_id" UUID,
	"title" VARCHAR(255),
	"description" TEXT,
	"created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"visibility" VISIBILITY_TYPE,
	PRIMARY KEY("id")
);

CREATE TABLE "portfolio_medias" (
	"id" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"portfolio_id" INTEGER NOT NULL,
	"media" MEDIA_TYPE NOT NULL,
	"url" TEXT UNIQUE,
	"caption" VARCHAR(255),
	"created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY("id")
);

CREATE TABLE "portfolio_roles" (
	"id" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"name" VARCHAR(255),
	PRIMARY KEY("id")
);

CREATE TABLE "portfolio_tools" (
	"id" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"name" VARCHAR(255),
	PRIMARY KEY("id")
);

CREATE TABLE "portfolio_role_ref" (
	"portfolio_id" INTEGER NOT NULL,
	"portfolio_role_id" INTEGER NOT NULL,
	"experience" EXPERIENCE_TYPE,
	PRIMARY KEY("portfolio_id", "portfolio_role_id")
);

CREATE TABLE "portfolio_tool_ref" (
	"portfolio_id" INTEGER NOT NULL,
	"portfolio_tool_id" INTEGER NOT NULL,
	"experience" EXPERIENCE_TYPE,
	PRIMARY KEY("portfolio_id", "portfolio_tool_id")
);

CREATE TABLE "roles" (
	"id" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"name" VARCHAR(100) NOT NULL UNIQUE,
	PRIMARY KEY("id")
);

CREATE TABLE "user_roles" (
	"user_id" UUID NOT NULL,
	"role_id" INTEGER NOT NULL,
	PRIMARY KEY("user_id", "role_id")
);

CREATE TABLE "moderation_actions" (
	"id" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"target_user" UUID NOT NULL,
	"performed_by" UUID NOT NULL,
	"action_type" MODERATION_ACTION NOT NULL,
	"reason" TEXT,
	"created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
	"expires_at" TIMESTAMPTZ NOT NULL,
	"is_active" BOOLEAN NOT NULL DEFAULT true,
	PRIMARY KEY("id")
);

CREATE TABLE "game_platforms" (
	"game_id" UUID NOT NULL,
	"platform" GAME_PLATFORM NOT NULL,
	PRIMARY KEY("game_id", "platform")
);

CREATE TABLE "notifications" (
	"id" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"user_id" UUID NOT NULL,
	"type" NOTIFICATION_TYPE NOT NULL,
	"source_user_id" UUID,
	"post_id" INTEGER,
	"event_id" INTEGER,
	"portfolio_id" INTEGER,
	"message" TEXT,
	"is_read" BOOLEAN,
	"created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY("id")
);

CREATE TABLE "event_instances" (
	"id" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"event_id" INTEGER NOT NULL,
	"start_time" TIMESTAMPTZ NOT NULL,
	"end_time" TIMESTAMPTZ NOT NULL,
	"generated_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY("id")
);

--ALTER TABLE "sessions"
--ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
--ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "organizations"
ADD FOREIGN KEY("owner_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "org_followers"
ADD FOREIGN KEY("follower_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "org_members"
ADD FOREIGN KEY("member_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "user_followers"
ADD FOREIGN KEY("follower_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "user_followers"
ADD FOREIGN KEY("lead_user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "games"
ADD FOREIGN KEY("owner_org_id") REFERENCES "organizations"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "games"
ADD FOREIGN KEY("owner_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "games_teams"
ADD FOREIGN KEY("game_id") REFERENCES "games"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "games_teams"
ADD FOREIGN KEY("team_member_Id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "review"
ADD FOREIGN KEY("game_id") REFERENCES "games"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "review"
ADD FOREIGN KEY("reviewer_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "users_contacts"
ADD FOREIGN KEY("contact_type_id") REFERENCES "contact_type"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "users_contacts"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "organization_contacts"
ADD FOREIGN KEY("contact_type_id") REFERENCES "contact_type"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "organization_contacts"
ADD FOREIGN KEY("org_id") REFERENCES "organizations"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "store_page"
ADD FOREIGN KEY("game_id") REFERENCES "games"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "store_page"
ADD FOREIGN KEY("store_type_id") REFERENCES "game_store"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "calendars"
ADD FOREIGN KEY("owner_org_id") REFERENCES "organizations"("id")
ON UPDATE NO ACTION ON DELETE SET NULL;
ALTER TABLE "calendars"
ADD FOREIGN KEY("owner_user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE SET NULL;
ALTER TABLE "calendar_events"
ADD FOREIGN KEY("calendar_id") REFERENCES "calendars"("id")
ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE "calendar_event_participants"
ADD FOREIGN KEY("event_id") REFERENCES "calendar_events"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "calendar_event_participants"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "posts"
ADD FOREIGN KEY("author_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "posts"
ADD FOREIGN KEY("organization_id") REFERENCES "organizations"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "posts"
ADD FOREIGN KEY("event_id") REFERENCES "calendar_events"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "post_likes"
ADD FOREIGN KEY("post_id") REFERENCES "posts"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "post_likes"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "comments"
ADD FOREIGN KEY("author_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "comments"
ADD FOREIGN KEY("post_id") REFERENCES "posts"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "posts"
ADD FOREIGN KEY("parent_post_id") REFERENCES "posts"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "portfolios"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "portfolio_medias"
ADD FOREIGN KEY("portfolio_id") REFERENCES "portfolios"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "calendar_events"
ADD FOREIGN KEY("recurrence_rule_id") REFERENCES "recurrence_rules"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "portfolio_role_ref"
ADD FOREIGN KEY("portfolio_role_id") REFERENCES "portfolio_roles"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "portfolio_role_ref"
ADD FOREIGN KEY("portfolio_id") REFERENCES "portfolios"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "portfolio_tool_ref"
ADD FOREIGN KEY("portfolio_id") REFERENCES "portfolios"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "portfolio_tool_ref"
ADD FOREIGN KEY("portfolio_tool_id") REFERENCES "portfolio_tools"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "user_roles"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "moderation_actions"
ADD FOREIGN KEY("target_user") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "moderation_actions"
ADD FOREIGN KEY("performed_by") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "game_platforms"
ADD FOREIGN KEY("game_id") REFERENCES "games"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "org_followers"
ADD FOREIGN KEY("org_id") REFERENCES "organizations"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "org_members"
ADD FOREIGN KEY("org_id") REFERENCES "organizations"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "user_roles"
ADD FOREIGN KEY("role_id") REFERENCES "roles"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "notifications"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "notifications"
ADD FOREIGN KEY("source_user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "notifications"
ADD FOREIGN KEY("post_id") REFERENCES "posts"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "notifications"
ADD FOREIGN KEY("event_id") REFERENCES "calendar_events"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "notifications"
ADD FOREIGN KEY("portfolio_id") REFERENCES "portfolios"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "event_instances"
ADD FOREIGN KEY("event_id") REFERENCES "calendar_events"("id")
ON UPDATE NO ACTION ON DELETE CASCADE;
  `;
  pgm.sql(sql);
};
